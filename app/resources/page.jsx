export const revalidate = 300; // ISR: 5 minutes
import dynamic from 'next/dynamic';
const Nav = dynamic(() => import('@/components/Nav'), { ssr: false });
const Footer = dynamic(() => import('@/components/Footer'), { ssr: false });
import { headers } from 'next/headers';
import { techNewsFeeds } from '@/config/newsSources';

async function getNews(baseUrl) {
	const res = await fetch(`${baseUrl}/api/news`, {
		next: { revalidate: 300 },
		cache: 'no-store',
	});
	if (!res.ok) return [];
	return await res.json();
}

export default async function ResourcesPage() {
	const hdrs = headers();
	const host = hdrs.get('host');
	const proto = hdrs.get('x-forwarded-proto') || 'http';
	const baseUrl = process.env.NEXT_PUBLIC_SITE_URL || `${proto}://${host}`;
	const items = await getNews(baseUrl);

	return (
		<main>
			<Nav />
		<div className="max-w-5xl mx-auto px-4 py-10">
			<h1 className="text-3xl font-semibold mb-6">Tech Resources & News</h1>
			<p className="text-gray-600 mb-6">Latest curated tech stories, summarized by AI. Updated automatically.</p>
			<div className="mb-10 rounded-md border border-gray-200 bg-gray-50 p-4 text-sm text-gray-700">
				<p className="mb-2"><span className="font-medium">What you&apos;re seeing:</span> A short, neutral overview of trending tech headlines. Summaries are generated by AI from multiple reputable sources and refreshed every few minutes.</p>
				<p className="mb-2"><span className="font-medium">How it works:</span> We aggregate RSS feeds, de-duplicate similar stories, and produce a concise 2â€“3 paragraph brief for quick reading. For full details, follow the original link.</p>
				<p className="mb-0"><span className="font-medium">Sources:</span> {techNewsFeeds.map(s => s.name).join(', ')}.</p>
			</div>

			{items.length === 0 && (
				<div className="text-gray-500">No news available right now. Please check back soon.</div>
			)}

			<div className="space-y-10">
				{items.map((item) => (
					<article key={item.link} className="border border-gray-200 rounded-lg p-5 hover:shadow-sm transition-shadow">
						<div className="flex items-center justify-between gap-4 mb-2">
							<h2 className="text-xl font-medium leading-snug">{item.title}</h2>
							<span className="text-xs text-gray-500 whitespace-nowrap">{item.publishedAt ? new Date(item.publishedAt).toLocaleString() : ''}</span>
						</div>
						<div className="text-sm text-gray-500 mb-3">{item.source}</div>
						<div className="prose prose-sm max-w-none whitespace-pre-wrap leading-relaxed">{item.summary}</div>
						<div className="mt-4">
							<a href={item.link} target="_blank" rel="noopener noreferrer" className="text-blue-600 hover:underline">Read original</a>
						</div>
					</article>
				))}
			</div>
		</div>
		<Footer />
		</main>
	);
}


